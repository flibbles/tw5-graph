\widget $edges.typed($editable:no)
\function configTiddlers() :cache[all[shadows+tiddlers]removeprefix[$:/config/flibbles/graph/edges/]]
\whitespace trim
<$parameters
	$$formulas={{{ [<formulasFilter>!is[blank]] ~"[all[]]" }}}
	$$fields={{{ [<fieldsFilter>!is[blank]] ~"[all[]]" }}}
	$$tiddler=<<currentTiddler>> >

<!-- First create edges for field types -->

<$list variable=fieldName filter="+[function[configTiddlers]removeprefix[fields/]subfilter<$fields>]">

<$let
	dataTiddler=`$:/config/flibbles/graph/edges/fields/$(fieldName)$` >

<$properties $for=edges
	$tiddler=<<dataTiddler>>
	delete={{{ [<$editable>!match[no]then[<$action-removetyped $tiddler=<<fromTiddler>> $field=<<fieldName>> $value=<<toTiddler>> />]] }}} >


<$list variable=toTiddler counter=index filter="[<$tiddler>] :map:flat[gettyped<fieldName>] +[!is[blank]]">

<$vars id=`$:/edge/fields/$($tiddler)$
$(fieldName)$-$(index)$`>

<$slot $name=ts-raw>

<$edge $from=<<$tiddler>> $id=<<id>> />

</$slot></$vars></$list></$properties></$let></$list>

<!-- Now create edges for formula types -->

<$list variable=formulaName filter="[function[configTiddlers]removeprefix[formulas/]subfilter<$formulas>]">

<$let
	dataTiddler=`$:/config/flibbles/graph/edges/formulas/$(formulaName)$`
	formula={{{ [<dataTiddler>get[filter]] }}} >

<$properties $for=edges
	$tiddler=<<dataTiddler>> >

<$list variable=toTiddler counter=index filter="[<$tiddler>] :map:flat[subfilter<formula>] +[!is[blank]]">

<$vars id=`$:/edge/formulas/$($tiddler)$
$(formulaName)$-$(index)$`>

<$slot $name=ts-raw>

<$edge $from=<<$tiddler>> $id=<<id>> />

</$slot></$vars></$list></$properties></$let></$list>
\end

\relink $edges.typed $formulas:filter $fields:filter $tiddler:title
