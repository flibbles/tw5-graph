\widget $edges.typed($formulas:'[all[]]' $fields:'[all[]]' $editable:no)
\whitespace trim
<$parameters $$tiddler=<<currentTiddler>> >

<!-- First create edges for field types -->

<$list variable=fieldName filter=":cache[all[shadows+tiddlers]removeprefix[$:/config/flibbles/graph/edges/fields/]] +[subfilter<$fields>]">

<$let
	dataTiddler=`$:/config/flibbles/graph/edges/fields/$(fieldName)$`
	currentTiddler=<<$tiddler>> >

<$properties $for=edges
	$tiddler=<<dataTiddler>>
	delete={{{ [<$editable>!match[no]then[<$action-removetyped $tiddler=<<fromTiddler>> $field=<<fieldName>> $value=<<toTiddler>> />]] }}} >


<$list variable=toTiddler counter=count filter="[<$tiddler>gettyped<fieldName>]">

<$slot $name=ts-raw>

<$transclude $tiddler="$:/plugins/flibbles/graph/templates/edge"
	id=`$:/edge/fields/$($tiddler)$
$(fieldName)$
$(count)$`
	$mode=inline
	$fillignore=yes />

</$slot></$list></$properties></$let></$list>

<!-- Now create edges for formula types -->

<$list variable=formulaName filter=":cache[all[shadows+tiddlers]removeprefix[$:/config/flibbles/graph/edges/formulas/]] +[subfilter<$formulas>]">

<$let
	dataTiddler=`$:/config/flibbles/graph/edges/formulas/$(formulaName)$`
	formula={{{ [<dataTiddler>get[filter]] }}} >

<$properties $for=edges
	$tiddler=<<dataTiddler>> >

<$list variable=toTiddler counter=count filter="[<$tiddler>subfilter<formula>]">

<$tiddler tiddler=<<$tiddler>> >

<$slot $name=ts-raw>

<$transclude $tiddler="$:/plugins/flibbles/graph/templates/edge"
	id=`$:/edge/formulas/$($tiddler)$
$(formulaName)$
$(count)$`
	$mode=inline
	$fillignore=yes />

</$slot></$tiddler></$list></$properties></$let></$list>
\end

\relink $edges.typed $formulas:filter $fields:filter $tiddler:title
