\widget $nodes.neighbors($filter, $fields:'[all[]]', $formulas:'[all[]]')
\whitespace trim

\function filter.cached() [{!!title}] :cache[{!!title}subfilter<$filter>]
\function configs.fields():cache[all[shadows+tiddlers]removeprefix[$:/config/flibbles/graph/edges/fields/]subfilter<$fields>]
\function configs.formulas() :cache[all[shadows+tiddlers]removeprefix[$:/config/flibbles/graph/edges/formulas/]subfilter<$formulas>addprefix[$:/config/flibbles/graph/edges/formulas/]]

\function edges.fields(node) [configs.fields[]] :map:flat[<node>gettyped{!!title}]
\function edges.formulas(node) [configs.formulas[]] :map:flat[<node>subfilter{!!filter}]

\function neighbors.for(node) [edges.fields<node>] [edges.formulas<node>] +[!is[blank]unique[]]
\function neighbors.cached() [all[]] :cache[neighbors.for{!!title}]

<$vars regexp={{{ [filter.cached[]escaperegexp[]join[|]addprefix[^(?:]addsuffix[)$]] }}}>

<$list filter="[all[]!search:title:regexp<regexp>] :filter[neighbors.cached[]search:title:regexp<regexp>] [filter.cached[]neighbors.cached[]!search:title:regexp<regexp>] +[unique[]]">

<$slot $name=ts-raw>

<$transclude $tiddler="$:/plugins/flibbles/graph/templates/node" />

</$slot></$list>
\end

\relink $nodes.neighbors $filter:filter
