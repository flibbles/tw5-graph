title: $:/plugins/flibbles/graph/ui/Wizard/Graph

\whitespace trim

\procedure preview(property variables)
<$action-setfield
	$tiddler=`$(state)$/event`
	text={{{ [enlist<variables>] :map[<currentTiddler>getvariable[]addprefix[=]addprefix<currentTiddler>] +[join[
]] }}} />
\end

\define makeGraph()
\whitespace trim
<$graph $engine={{{ [<engineState>get[text]] }}} >
<pre class=graph-overlay><$text text={{{ [<state>addsuffix[/event]get[text]] }}} /></pre>
<$properties $for=graph $(graphAttributes)$>
</$properties>
<$properties $for=nodes $(nodesAttributes)$>
	<$node $tiddler=Root />
	<$node $tiddler=Branch />
	<$node $tiddler=Leaf1 />
	<$node $tiddler=Leaf2 />
	<$node $tiddler=Leaf3 />
	<$node $tiddler=Leaf4 />
</$properties>
<$properties $for=edges $(edgesAttributes)$>
	<$edge from=Root to=Branch />
	<$edge from=Root to=Leaf1 />
	<$edge from=Root to=Leaf2 />
	<$edge from=Branch to=Leaf3 />
	<$edge from=Leaf3 to=Branch />
	<$edge from=Branch to=Leaf4 />
	<$edge from=Leaf4 to=Leaf4 />
</$properties>
</$graph>
\end


<$let
	graphState=`$(state)$/type/graph`
	nodesState=`$(state)$/type/nodes`
	edgesState=`$(state)$/type/edges`
	engineState=`$(state)$/engine`
	graphAttributes={{{ [<json>jsonindexes[graph]] :map[[$1$={{$2$##$1$}}]substitute<currentTiddler>,<graphState>] +[join[ ]] }}}
	nodesAttributes={{{ [<json>jsonindexes[nodes]] :map[[$1$={{$2$##$1$}}]substitute<currentTiddler>,<nodesState>] +[join[ ]] }}}
	edgesAttributes={{{ [<json>jsonindexes[edges]] :map[[$1$={{$2$##$1$}}]substitute<currentTiddler>,<edgesState>] +[join[ ]] }}}>

<$transclude $variable=makeGraph $mode=inline />
