title: Action.AddEdgeWidget
tags: ActionWidgets Widgets [[Macro Widgets]]
caption: action.addedge

\procedure edgePackage()
	<$data title="$:/config/flibbles/relink/fields/titleType"
		caption="Relink for titleType"
		text=title
		notes="tw5-graph uses Relink configuration to determine the type of field an edge uses." />
	<$data title="$:/config/flibbles/graph/edges/titleType"
		caption="titleType"
		type="application/json"
		text='{"color": "red", "arrows": "to"}' />
	<$data title="$:/config/flibbles/graph/edges/listType"
		caption="listType"
		type="application/json"
		text='{"color": "blue"}' />
\end


! Introduction

The ''action-addedge'' widget is used to add a typed field to a tiddler corresponding to a newly created edge. This is designed to work in conjunction with the [[addEdge]] properties of graph engines.

Instead of specifying a field through attributes, this will call up a modal to select from active edge types used by tw5-graph.

! Contents and Attributes

|!Attribute | !Description |
|$fromTiddler |The tiddler whose field will be written to (defaults to value of fromTiddler variable, or the current tiddler) |
|$toTiddler |The value to be written to that field (defaults to value of toTiddler variable, or the current tiddler) |

<$doc.implementation />

! Examples

<$doc.example
	description="Standard use"
	narrative="This example show how this action's default behavior when connecting nodes with a graph engines's native manipulation tools."
	content="""<$graph addEdge="<$action.addedge />">
	<$list filter="BranchA BranchB BranchC">
		<$node label={{!!title}} />
		<$edges.all />
	</$list>
</$graph>""">
<<edgePackage>>
</$doc.example>

<$doc.example
	description="Custom use"
	narrative="This example show how this action can be used for more custom behavior. In this case, the action is tied to the double-click action, and all created edges all stem from 'Root'."
	content="""<$graph>
	<$node $tiddler=Root size=20 color=brown/>
	<$edges.all $tiddler=Root />
	<$properties size=10 doubleclick="<$action.addedge $fromTiddler=Root/>">
		<$list filter="BranchA BranchB BranchC">
			<$node />
		</$list>
	</$properties>
</$graph>""">
<<edgePackage>>
</$doc.example>
