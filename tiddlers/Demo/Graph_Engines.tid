title: Graph Engines
tags: Demo

<$graph>
 <$graph.popup>
  <$properties.stack>
   <$list filter="[tag[Deity]!is[system]!is[draft]]">
    <$node shape={{!!shape}} label={{!!title}} doubleclick="<$action-navigate/>"/>
    <$edges.fields />
   </$list>
  </$properties.stack>
 </$graph.popup>
</$graph>

TW-Graph is capable of using different underlying engines for creating graphs. [[Vis-network]] is the recommended engine, but other choices are possible, such as [[Orb]], though currently, it's implementation is incomplete. It's also possible create your own choices from other Javascript graphing engines on the internet. The [[Adapter|graphengine Module]] required to connect an engine to TW5-Graph is quite simple.

Try changing the engine that this demo is using!

<div class=graph-engine-button-list>

<$list filter="[[graphengine]modules[]]">

<$let name={{{ [all[current]moduleproperty[name]] }}} >

<$button class=graph-engine-button selectedClass=active set="$:/config/flibbles/graph/engine" setTo=<<name>> >

<div class=graph-icon>

<$transclude $tiddler={{{ [all[current]shadowsource[]addsuffix[/icon]is[shadow]] }}} />

</div>
<$text text=<<name>> />

</$button></$let></$list>

<$text text=<<name>> />
