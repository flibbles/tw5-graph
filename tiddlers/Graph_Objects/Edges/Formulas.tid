In The <<.graph>> GUI, you can define types of edges connecting a node to others based on the output from passing each node through custom filters. The formulas edge type allows you to style these nodes with their own [[properties|Graph Properties]].

These formula types, once configured, can optionally appear in your [[views|View]] and [[graph templates|Templates]] that take advantage of them (most of them). Or any custom graphs you make that use the <<.wlink Edges.TypedWidget>> widget.


! Creating your own

When you create your own formula edge-types (by clicking the <<.plus>> at the bottom of the the Formulas tabs in edge property configuration. See below.) Once you do, you'll have a table of properties to assign, but also an extra dropdown: "Filter". Whatever filter you put in here, each node will be passed individually into it, and each output will define an edge, and where it connects to.

!! Filter

<<.graph>> executes the formula's filter by passing tiddler titles into it one at a time, and by assigning <<.var currentTiddler>> to that title as well. Every title outputted is considered a node that an edge should be created to point to.

For instance, there is a preconfigured <<.value links>> formula edge type. It has a custom-assigned filter of <$transclude $variable=.value _={{$:/config/flibbles/graph/edges/formulas/links!!filter}} />. For every node in your view, the title of that node's corresponding tiddler is passed into that filter, and edges will be made for the output. In other words, a <<.value links>> type edge will be made for every link in a tiddler's body.

<<.var currentTiddler>> also gets set to the incoming node, which allows you to make filters like this, for example: <<.value "[all[tiddlers]is[image]prefix<currentTiddler>]">>. This creates an edge from a node, to every image tiddler which as that node's title as a prefix.

!!! A note on efficiency

Be aware that formula filters get called for //every// node in your graph. This can be a problem if your filter is inefficient. Take our <<.value "[all[tiddlers]is[image]prefix<currentTiddler>]">> example above. It will iterate through //every// tiddler in your wiki for each node in your graph. Consider using the [[:cache prefix|Cache Filter Run Prefix]] to improve performance. In this case, try this: <<.value ":cache[all[tiddlers]is[image]] +[prefix<currentTiddler>]">>. This will only iterate through every tiddler once, and then save which ones were the images for each subsequent run during other nodes. Much more efficient.

Here is a transclusion of the Properties tab in <$link to="$:/plugins/flibbles/graph/settings">the <<.graph>> settings</$link>

{{$:/plugins/flibbles/graph/ui/Settings/Properties|edges}}
