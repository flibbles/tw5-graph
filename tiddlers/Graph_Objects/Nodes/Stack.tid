\widget $link.stack()
\whitespace trim
<$linkcatcher actions="""
    <$action-navigate $to=<<navigateTo>> />
    <$action-setfield $tiddler="$:/state/graph/settings/--216283713" text=nodes/>
    <$action-setfield $tiddler="$:/state/flibbles/graph/settings" text={{$:/plugins/flibbles/graph/ui/Settings/Properties!!title}} />
""">
  <$link to="$:/plugins/flibbles/graph/settings">
    <$slot $name=ts-raw />
\end

In The <<.graph>> GUI, you can define a class of node properties which can selectively apply to nodes based on whether that node's corresponding tiddler title produces results when passed through a filter.

For instance, if you have a stack node type called <<.value Felines>>, and it is configured with the filter <<.value "[tag[Feline]]">>, then all tiddlers that are nodes within your [[graphTiddler|GraphTiddler]] (or contained within <<.wlink Properties.ConfiguredWidget>> which are tagged with <<.value Feline>>, will inherit the properties defined in the <<.value Felines>> stack node type. Any tiddlers that don't have that tag will not be changed.

!! Why is it called Stack?

Because order matters.

If two or more stack node types would change the same property on a node, then the one farther down in the stack take priority.

You can manage the order of the stack by going to the <$link.stack>Node Stack Configuration page</$link.stack> and dragging the vertical tabs along the left-hand side to whatever order you want.

Here is a transclusion of that Properties tab.

{{$:/plugins/flibbles/graph/ui/Settings/Properties|nodes}}
