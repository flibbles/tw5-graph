title: Engines
tags: Installation

Once you've installed <<.graph>>, you'll need to install at least one engine plugin. This is because <<.graph>> is [[designed to be only as the front end|Frontend and backend]]. It has no graphing capabilities of it's own. Currently [[Vis-network]] is the one most developed and feature-rich.

Engine plugins work through a series of [[Graph Objects]] that <<.graph>> can declare through widgets (Namely, [[Graph|Graph GraphObject]], [[Nodes|Nodes GraphObject]], and [[Edges|Edges GraphObject]], though others can exist). Each of these types of objects accept [[Properties|Graph Properties]] which are unique to the graphing engine, but engines share common properties. Here's the list:

<table>
  <tr>
    <th align=left>Property</th>
    <$list filter="[[graphengine]modules[]shadowsource[]]">
      <th style="width:2em;padding:1px;">
        <$link to={{!!name}}>
          <$transclude $tiddler=`$(currentTiddler)$/icon` />
        </$link>
      </th>
    </$list>
  </tr>
  <$list variable=type filter="[[graphengine]modules[]moduleproperty[properties]jsonindexes[]unique[]] graph +[putfirst[]]">
    <tr>
      <th colspan={{{ [[graphengine]modules[]count[]add[1]] }}} ><<type>></th>
    </tr>
    <$list variable=property filter=":cache[[graphengine]modules[]moduleproperty[properties]] +[jsonextract<type>jsonindexes[]unique[]sort[]]">
      <tr>
        <td><<property>></td>
        <$list filter="[[graphengine]modules[]]">
          <td>
            <$list filter=`[{!!title}] :cache[{!!title}moduleproperty[properties]jsonextract[$(type)$]jsonindexes[]] +[match<property>]`>âœ“</$list>
          </td>
        </$list>
      </tr>
    </$list>
  </$list>
</table>

! Multiple engines

If you wish, you //can// install multiple engines. That way, you can have different graphs in your project using different engines. But I suggest you do this only if you must. Engine plugins are large, and each one will bloat up your Tiddlywiki's size.

! Making a new engine

The advantage to separating <<.graph>> from the engine is that you can wrap other graphing libraries in plugins of your own making and use those with <<.graph>>. Those plugins need only implement the <$link to="graphengine Module">`graphengine` module</$link>.
