title: Cache Filter Run Prefix (Examples)

This prefix is especially effective for gathering shadow tiddlers with certain prefixes. Caching a set of them in a function will allow that function to execute very quickly on all subsequent runs. In this example, all shadows and tiddlers are only trawled once.

<$doc.demo
	description=prefixes
	content="""\function shortcuts() :cache[all[shadows+tiddlers]prefix[$:/config/shortcuts]]

!!! Shortcuts using ctrl key
<<list-links "[function[shortcuts]search[ctrl-]]">>

!!! Shortcuts using alt key
<<list-links "[function[shortcuts]search[alt-]]">>""" />

<!-- This demo depends on other variables being allowed, which I may do at some point. but not now.
We solve fibonacci numbers the inefficient way, but caching makes it efficient anyway. We pass each number to the filter as currentTiddler, and it caches the results under that number. This would take ages to run without caching.

<$doc.demo
	description=fibonacci
	content="""\function fibonacci-cache() [all[]] :cache[function[fibonacci],<currentTiddler>]
\function fibonacci(number) [<number>compare::lt[2]] ~[enlist[-1 -2]add<number>function[fibonacci-cache]sum[]]
; 6
: <<fibonacci 6>>""" />
-->
